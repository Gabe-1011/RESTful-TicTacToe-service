{"map":"{\"version\":3,\"sources\":[\"/home/ubuntu/ttt/client/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/home/ubuntu/ttt/client/src/logo.svg\",\"/home/ubuntu/ttt/client/src/game_components/Square.js\",\"/home/ubuntu/ttt/client/src/game_components/Board.js\",\"/home/ubuntu/ttt/client/src/game_components/Game.js\",\"/home/ubuntu/ttt/client/src/App.js\",\"/home/ubuntu/ttt/client/src/serviceWorker.js\",\"/home/ubuntu/ttt/client/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Square\",\"react_default\",\"a\",\"createElement\",\"className\",\"Component\",\"Board\",\"i\",\"Square_Square\",\"this\",\"renderSquare\",\"Game\",\"Board_Board\",\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleSubmit\",\"event\",\"preventDefault\",\"fetch\",\"method\",\"body\",\"JSON\",\"stringify\",\"name\",\"state\",\"headers\",\"Content-Type\",\"then\",\"res\",\"json\",\"result\",\"setState\",\"message\",\"data\",\"handleChange\",\"defineProperty\",\"target\",\"value\",\"onSubmit\",\"bind\",\"assertThisInitialized\",\"src\",\"logo\",\"alt\",\"href\",\"rel\",\"action\",\"type\",\"placeholder\",\"onChange\",\"Game_Game\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport './Game.css';\\n\\nexport default class Square extends Component {\\n  render() {\\n    return (\\n      <button className=\\\"square\\\">\\n        {/* TODO */}\\n      </button>\\n    );\\n  }\\n}\\n\",\"import React, { Component } from 'react';\\nimport Square from './Square';\\nimport './Game.css';\\n\\nexport default class Board extends Component {\\n  renderSquare(i) {\\n    return <Square />;\\n  }\\n\\n  render() {\\n    const status = 'Next player: X';\\n\\n    return (\\n      <div>\\n        <div className=\\\"status\\\">{status}</div>\\n        <div className=\\\"board-row\\\">\\n          {this.renderSquare(0)}\\n          {this.renderSquare(1)}\\n          {this.renderSquare(2)}\\n        </div>\\n        <div className=\\\"board-row\\\">\\n          {this.renderSquare(3)}\\n          {this.renderSquare(4)}\\n          {this.renderSquare(5)}\\n        </div>\\n        <div className=\\\"board-row\\\">\\n          {this.renderSquare(6)}\\n          {this.renderSquare(7)}\\n          {this.renderSquare(8)}\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\",\"import React, { Component } from 'react';\\nimport Board from './Board';\\nimport './Game.css';\\n\\nexport default class Game extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"game\\\">\\n        <div className=\\\"game-board\\\">\\n          <Board />\\n        </div>\\n        <div className=\\\"game-info\\\">\\n          <div>{/* status */}</div>\\n          <ol>{/* TODO */}</ol>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport Game from './game_components/Game'\\n\\nclass App extends Component {\\n  constructor(props){\\n    super(props);\\n    this.state = {\\n      name: '',\\n      message: ''\\n    }\\n    this.onSubmit = this.handleSubmit.bind(this);\\n  }\\n\\n  handleSubmit = event => {\\n    event.preventDefault();\\n    fetch(\\\"/ttt\\\", {\\n    method: 'POST',\\n    body: JSON.stringify({name: this.state.name}),\\n    headers: {\\n        'Content-Type': 'application/json'\\n    }\\n    })\\n    .then(res => res.json())\\n    .then(\\n      (result) => {\\n        //callback for the response\\n        this.setState({\\n          message: result.data\\n        });\\n      }\\n     );\\n  };\\n\\n  handleChange = event => {\\n    event.preventDefault();\\n    this.setState({\\n      [event.target.name]: event.target.value\\n    });\\n  };\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n          <p>\\n            Edit <code>src/App.js</code> and save to reload.\\n          </p>\\n          <a\\n            className=\\\"App-link\\\"\\n            href=\\\"https://reactjs.org\\\"\\n            target=\\\"_blank\\\"\\n            rel=\\\"noopener noreferrer\\\"\\n          >\\n            Learn React\\n          </a>\\n        </header>\\n        <form onSubmit={this.handleSubmit} action=\\\"\\\">\\n          <p><input type='text' placeholder='Your Name' name='name' onChange={this.handleChange} /></p>\\n          <p><input type=\\\"submit\\\" value=\\\"Start\\\"/></p>\\n        </form>\\n        <p className=\\\"App-intro\\\">{this.state.message}</p>\\n        <Game />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,function(e,t,a){},,,,function(e,t,a){e.exports=a.p+\"static/media/logo.5d5d9eef.svg\"},function(e,t,a){e.exports=a(20)},,,,,,function(e,t,a){},function(e,t,a){},function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),c=a(9),l=a.n(c),o=(a(18),a(10)),i=a(1),s=a(2),u=a(5),m=a(3),d=a(4),h=a(6),p=a(11),b=a.n(p),f=(a(19),a(7),function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"button\",{className:\"square\"})}}]),t}(n.Component)),E=function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(s.a)(t,[{key:\"renderSquare\",value:function(e){return r.a.createElement(f,null)}},{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"status\"},\"Next player: X\"),r.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(0),this.renderSquare(1),this.renderSquare(2)),r.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(3),this.renderSquare(4),this.renderSquare(5)),r.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(6),this.renderSquare(7),this.renderSquare(8)))}}]),t}(n.Component),j=function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"game\"},r.a.createElement(\"div\",{className:\"game-board\"},r.a.createElement(E,null)),r.a.createElement(\"div\",{className:\"game-info\"},r.a.createElement(\"div\",null),r.a.createElement(\"ol\",null)))}}]),t}(n.Component),v=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(u.a)(this,Object(m.a)(t).call(this,e))).handleSubmit=function(e){e.preventDefault(),fetch(\"/ttt\",{method:\"POST\",body:JSON.stringify({name:a.state.name}),headers:{\"Content-Type\":\"application/json\"}}).then(function(e){return e.json()}).then(function(e){a.setState({message:e.data})})},a.handleChange=function(e){e.preventDefault(),a.setState(Object(o.a)({},e.target.name,e.target.value))},a.state={name:\"\",message:\"\"},a.onSubmit=a.handleSubmit.bind(Object(h.a)(Object(h.a)(a))),a}return Object(d.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(\"img\",{src:b.a,className:\"App-logo\",alt:\"logo\"}),r.a.createElement(\"p\",null,\"Edit \",r.a.createElement(\"code\",null,\"src/App.js\"),\" and save to reload.\"),r.a.createElement(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Learn React\")),r.a.createElement(\"form\",{onSubmit:this.handleSubmit,action:\"\"},r.a.createElement(\"p\",null,r.a.createElement(\"input\",{type:\"text\",placeholder:\"Your Name\",name:\"name\",onChange:this.handleChange})),r.a.createElement(\"p\",null,r.a.createElement(\"input\",{type:\"submit\",value:\"Start\"}))),r.a.createElement(\"p\",{className:\"App-intro\"},this.state.message),r.a.createElement(j,null))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[12,1,2]]]);","extractedComments":[]}