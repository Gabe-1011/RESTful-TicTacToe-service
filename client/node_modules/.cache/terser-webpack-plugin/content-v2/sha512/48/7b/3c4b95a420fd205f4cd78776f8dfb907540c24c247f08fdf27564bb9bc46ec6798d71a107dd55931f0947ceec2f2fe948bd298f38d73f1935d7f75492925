{"map":"{\"version\":3,\"sources\":[\"/home/ubuntu/ttt/client/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/home/ubuntu/ttt/client/src/logo.svg\",\"/home/ubuntu/ttt/client/src/game_components/Square.js\",\"/home/ubuntu/ttt/client/src/game_components/Board.js\",\"/home/ubuntu/ttt/client/src/game_components/Game.js\",\"/home/ubuntu/ttt/client/src/App.js\",\"/home/ubuntu/ttt/client/src/serviceWorker.js\",\"/home/ubuntu/ttt/client/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Square\",\"_this\",\"this\",\"react_default\",\"a\",\"createElement\",\"className\",\"onClick\",\"props\",\"value\",\"Component\",\"Board\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"grid\",\"Array\",\"fill\",\"xIsNext\",\"i\",\"squares\",\"slice\",\"winner\",\"calculateWinner\",\"then\",\"result\",\"console\",\"log\",\"setState\",\"_this2\",\"Square_Square\",\"handleClick\",\"status\",\"renderSquare\",\"fetch\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"response\",\"json\",\"data\",\"Game\",\"Board_Board\",\"App\",\"handleSubmit\",\"event\",\"preventDefault\",\"name\",\"res\",\"message\",\"handleChange\",\"defineProperty\",\"target\",\"onSubmit\",\"bind\",\"assertThisInitialized\",\"src\",\"logo\",\"alt\",\"href\",\"rel\",\"action\",\"type\",\"placeholder\",\"onChange\",\"Game_Game\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport './Game.css';\\n\\nexport default class Square extends Component {\\n  render() {\\n    return (\\n      <button\\n        className=\\\"square\\\"\\n        onClick={() => this.props.onClick()}\\n      >\\n        {this.props.value}\\n      </button>\\n    );\\n  }\\n}\\n\",\"import React, { Component } from 'react';\\nimport Square from './Square';\\nimport './Game.css';\\n\\nexport default class Board extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      grid: Array(9).fill(''),\\n      xIsNext: true\\n    };\\n  }\\n\\n  handleClick(i) {\\n    const squares = this.state.grid.slice();\\n    const winner = calculateWinner(squares).then(function(result) {\\n      return result.winner;\\n    });\\n    console.log(winner);\\n    if (winner || squares[i]) {\\n      return;\\n    }\\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\\n    this.setState({\\n      grid: squares,\\n      xIsNext: !this.state.xIsNext,\\n    });\\n  }\\n\\n  renderSquare(i) {\\n    return (\\n      <Square\\n        value={this.state.grid[i]}\\n        onClick={() => this.handleClick(i)}\\n      />\\n    );\\n  }\\n\\n  render() {\\n    const winner = calculateWinner(this.state.grid).then(function(result) {\\n      return result.winner;\\n    });\\n    //const winner = this.state.winner;\\n    let status;\\n    console.log(winner);\\n    if (winner) {\\n      status = 'Winner: ' + winner;\\n    } else {\\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\\n    }\\n\\n    return (\\n      <div>\\n        <div className=\\\"status\\\">{status}</div>\\n        <div className=\\\"board-row\\\">\\n          {this.renderSquare(0)}\\n          {this.renderSquare(1)}\\n          {this.renderSquare(2)}\\n        </div>\\n        <div className=\\\"board-row\\\">\\n          {this.renderSquare(3)}\\n          {this.renderSquare(4)}\\n          {this.renderSquare(5)}\\n        </div>\\n        <div className=\\\"board-row\\\">\\n          {this.renderSquare(6)}\\n          {this.renderSquare(7)}\\n          {this.renderSquare(8)}\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nfunction calculateWinner(squares){\\n    fetch('/ttt/play', {\\n    method: 'post',\\n    headers: {\\n      \\\"Content-Type\\\": \\\"application/json\\\",\\n    },\\n    body: JSON.stringify({\\n      grid: squares\\n    })\\n    }).then(function(response) {\\n      return response.json();\\n    }).then(function(data) {\\n      console.log(data);\\n      return data;\\n    })\\n}\\n\",\"import React, { Component } from 'react';\\nimport Board from './Board';\\nimport './Game.css';\\n\\nexport default class Game extends Component {\\n  constructor(props){\\n    super(props);\\n    this.state = {\\n      winner: ''\\n    };\\n  }\\n  render() {\\n    return (\\n      <div className=\\\"game\\\">\\n        <div className=\\\"game-board\\\">\\n          <Board winner={this.state.winner} />\\n        </div>\\n        <div className=\\\"game-info\\\">\\n          <div>{/* status */}</div>\\n          <ol>{/* TODO */}</ol>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport Game from './game_components/Game'\\n\\nclass App extends Component {\\n  constructor(props){\\n    super(props);\\n    this.state = {\\n      name: '',\\n      message: ''\\n    }\\n    this.onSubmit = this.handleSubmit.bind(this);\\n  }\\n\\n  handleSubmit = event => {\\n    event.preventDefault();\\n    fetch(\\\"/ttt\\\", {\\n    method: 'POST',\\n    body: JSON.stringify({name: this.state.name}),\\n    headers: {\\n        'Content-Type': 'application/json'\\n    }\\n    })\\n    .then(res => res.json())\\n    .then(\\n      (result) => {\\n        //callback for the response\\n        this.setState({\\n          message: result.data\\n        });\\n      }\\n     );\\n  };\\n\\n  handleChange = event => {\\n    event.preventDefault();\\n    this.setState({\\n      [event.target.name]: event.target.value\\n    });\\n  };\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n          <p>\\n            Edit <code>src/App.js</code> and save to reload.\\n          </p>\\n          <a\\n            className=\\\"App-link\\\"\\n            href=\\\"https://reactjs.org\\\"\\n            target=\\\"_blank\\\"\\n            rel=\\\"noopener noreferrer\\\"\\n          >\\n            Learn React\\n          </a>\\n        </header>\\n        <form onSubmit={this.handleSubmit} action=\\\".\\\" method=\\\"post\\\">\\n          <p><input type='text' placeholder='Your Name' name='name' onChange={this.handleChange} /></p>\\n          <p><input type=\\\"submit\\\" value=\\\"Start\\\"/></p>\\n        </form>\\n        <p className=\\\"App-intro\\\">{this.state.message}</p>\\n        <Game />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,function(e,t,n){},,,,function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},function(e,t,n){e.exports=n(20)},,,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),i=n(9),c=n.n(i),o=(n(18),n(10)),s=n(1),l=n(2),u=n(5),m=n(3),h=n(4),d=n(6),p=n(11),f=n.n(p),b=(n(19),n(7),function(e){function t(){return Object(s.a)(this,t),Object(u.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this;return r.a.createElement(\"button\",{className:\"square\",onClick:function(){return e.props.onClick()}},this.props.value)}}]),t}(a.Component)),v=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(u.a)(this,Object(m.a)(t).call(this,e))).state={grid:Array(9).fill(\"\"),xIsNext:!0},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"handleClick\",value:function(e){var t=this.state.grid.slice(),n=g(t).then(function(e){return e.winner});console.log(n),n||t[e]||(t[e]=this.state.xIsNext?\"X\":\"O\",this.setState({grid:t,xIsNext:!this.state.xIsNext}))}},{key:\"renderSquare\",value:function(e){var t=this;return r.a.createElement(b,{value:this.state.grid[e],onClick:function(){return t.handleClick(e)}})}},{key:\"render\",value:function(){var e,t=g(this.state.grid).then(function(e){return e.winner});return console.log(t),e=t?\"Winner: \"+t:\"Next player: \"+(this.state.xIsNext?\"X\":\"O\"),r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"status\"},e),r.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(0),this.renderSquare(1),this.renderSquare(2)),r.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(3),this.renderSquare(4),this.renderSquare(5)),r.a.createElement(\"div\",{className:\"board-row\"},this.renderSquare(6),this.renderSquare(7),this.renderSquare(8)))}}]),t}(a.Component);function g(e){fetch(\"/ttt/play\",{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({grid:e})}).then(function(e){return e.json()}).then(function(e){return console.log(e),e})}var j=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(u.a)(this,Object(m.a)(t).call(this,e))).state={winner:\"\"},n}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"game\"},r.a.createElement(\"div\",{className:\"game-board\"},r.a.createElement(v,{winner:this.state.winner})),r.a.createElement(\"div\",{className:\"game-info\"},r.a.createElement(\"div\",null),r.a.createElement(\"ol\",null)))}}]),t}(a.Component),E=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(u.a)(this,Object(m.a)(t).call(this,e))).handleSubmit=function(e){e.preventDefault(),fetch(\"/ttt\",{method:\"POST\",body:JSON.stringify({name:n.state.name}),headers:{\"Content-Type\":\"application/json\"}}).then(function(e){return e.json()}).then(function(e){n.setState({message:e.data})})},n.handleChange=function(e){e.preventDefault(),n.setState(Object(o.a)({},e.target.name,e.target.value))},n.state={name:\"\",message:\"\"},n.onSubmit=n.handleSubmit.bind(Object(d.a)(Object(d.a)(n))),n}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(\"img\",{src:f.a,className:\"App-logo\",alt:\"logo\"}),r.a.createElement(\"p\",null,\"Edit \",r.a.createElement(\"code\",null,\"src/App.js\"),\" and save to reload.\"),r.a.createElement(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Learn React\")),r.a.createElement(\"form\",{onSubmit:this.handleSubmit,action:\".\",method:\"post\"},r.a.createElement(\"p\",null,r.a.createElement(\"input\",{type:\"text\",placeholder:\"Your Name\",name:\"name\",onChange:this.handleChange})),r.a.createElement(\"p\",null,r.a.createElement(\"input\",{type:\"submit\",value:\"Start\"}))),r.a.createElement(\"p\",{className:\"App-intro\"},this.state.message),r.a.createElement(j,null))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(E,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[12,1,2]]]);","extractedComments":[]}